name: build studio image
# Builds complete OOMOL studio runtime image with oocana CLI, ovmlayer, and all executors.
# Creates production-ready multi-architecture container for direct oocana workflow execution.
on:
  pull_request:
    paths:
      - "dockerfiles/studio.dockerfile"
      - "package.json"
      - "package-lock.json"
      - "scripts/bin.sh"
      - ".github/workflows/build-studio-image.yaml"
  push:
    paths:
      - "dockerfiles/studio.dockerfile"
      - "package.json"
      - "package-lock.json"
      - "scripts/bin.sh"
      - ".github/workflows/build-studio-image.yaml"
  workflow_dispatch:

jobs:
  build-studio:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/oomol/oocana-runtime
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
          flavor: |
            latest=auto
          labels: |
            org.opencontainers.image.description=A container for running Oocana directly in command line. Python and Node.js block's executor are pre-installed.
      - name: download ovmlayer and oocana (arm64)
        uses: ./.github/actions/download
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          architecture: arm64
      - name: download ovmlayer and oocana (amd64)
        uses: ./.github/actions/download
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          architecture: amd64
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # secrets: |
          #   token=${{ secrets.GITHUB_TOKEN }}
          # secret-files: |
          #   npmrc=.npmrc
          file: dockerfiles/studio.dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max