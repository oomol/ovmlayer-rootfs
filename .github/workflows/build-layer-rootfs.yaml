name: build layer rootfs
description: build studio rootfs on ubuntu-latest which contains oocana, python-executor, nodejs-executor, and ovmlayer
on:
  pull_request:
    paths:
      - "layer.dockerfile"
      - "package.json"
      - "package-lock.json"
      - ".github/workflows/build-layer-rootfs.yaml"
  push:
    tags:
      - "layer-rootfs*"
  workflow_dispatch:

jobs:
  build-studio:
    strategy:
      matrix:
        platforms: [linux/amd64,linux/arm64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=raw,value=local
            type=semver,pattern={{version}}
          flavor: |
            latest=auto
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: layer.dockerfile
          cache-from: type=gha
          platforms: ${{ matrix.platforms }}
          cache-to: type=gha,mode=max
          load: true
      - name: export studio rootfs
        run: |
          if [ ${{ matrix.platforms }} == "linux/amd64" ]; then
            docker run --platform ${{ matrix.platforms }} -d --name amd64-layer-rootfs-export ghcr.io/${{ github.repository }}:local true
            docker export amd64-layer-rootfs-export >> amd64-layer-rootfs.tar
          else
            docker run --platform ${{ matrix.platforms }} -d --name arm64-layer-rootfs-export ghcr.io/${{ github.repository }}:local true
            docker export arm64-layer-rootfs-export >> arm64-layer-rootfs.tar
          fi
      - name: tar-name
        run: |
          if [ ${{ matrix.platforms }} == "linux/amd64" ]; then
            echo "tar=amd64-layer-rootfs.tar" >> $GITHUB_OUTPUT
          else
            echo "tar=arm64-layer-rootfs.tar" >> $GITHUB_OUTPUT
          fi
        id: tar-name
      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{ github.event_name == 'push' &&  github.ref_type == 'tag' }}
        with:
          files: |
            ${{ steps.tar-name.outputs.tar }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body_path: package.json
          append_body: false
          draft: false
          prerelease: false
          make_latest: true