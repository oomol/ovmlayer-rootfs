name: build studio image
on:
  pull_request:
    paths:
      - ".Dockerfile"
      - "package.json"
      - "package-lock.json"
      - ".github/workflows/build-studio-rootfs.yaml"
  push:
    tags:
      - "studio-rootfs*"
  workflow_dispatch:

jobs:
  build-studio:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo '//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}' >> .npmrc
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
          flavor: |
            latest=auto
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.ref_type == 'tag' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: |
            token=${{ secrets.GITHUB_TOKEN }}
          secret-files: |
            npmrc=.npmrc
          file: .Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: export studio rootfs
        run: |
          docker run --platform linux/amd64 -d --name amd64-studio-rootfs-export ghcr.io/${{ github.repository }}:latest true
          docker export amd64-studio-rootfs-export >> amd64-studio-rootfs.tar
          docker run --platform linux/arm64 -d --name arm64-studio-rootfs-export ghcr.io/${{ github.repository }}:latest true
          docker export arm64-studio-rootfs-export >> arm64-studio-rootfs.tar
      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   timeout-minutes: 12
      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{ github.event_name == 'push' &&  github.ref_type == 'tag' }}
        with:
          files: |
            amd64-studio-rootfs.tar
            arm64-studio-rootfs.tar
          token: ${{ secrets.GITHUB_TOKEN }}
          body_path: package.json
          append_body: false
          draft: false
          prerelease: false
          make_latest: true