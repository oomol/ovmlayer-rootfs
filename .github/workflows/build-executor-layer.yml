name: build executor layer
# build executor layer
on:
  pull_request:
    paths:
      - ".github/workflows/build-executor-layer.yml"
      - "package.json"
      - "requirements.txt"
  push:
    tags:
      - "executor-layer*"
jobs:
  build-layer:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm]
    runs-on: ${{ matrix.os }}
    steps:
      - name: architecture
        run: |
          echo "architecture=${{ (runner.arch == 'ARM64' || runner.arch == 'ARM') && 'arm64' || 'amd64' }}" >> $GITHUB_OUTPUT
        id: arch
      - uses: actions/checkout@v4
      - uses: oomol/ovmlayer-rootfs/.github/actions/layer@main
        with:
          token: ${{ github.token }}
          architecture: ${{ steps.arch.outputs.architecture }}
      - name: create layer
        run: |
          layer=executor
          sudo ovmlayer create $layer
          sudo ovmlayer merge -l $layer -m m1
          sudo ovmlayer run --workdir=/root \
            --mount type=bind,source=${{ github.workspace }}/scripts/install-executor.sh,dst=/root/install-executor.sh,nonrecursive \
            --mount type=bind,source=${{ github.workspace }}/requirements.txt,dst=/root/requirements.txt,nonrecursive \
            --mount type=bind,source=${{ github.workspace }}/package.json,dst=/root/package.json,nonrecursive \
            --merged-point m1 \
            "zsh"  "-i" "-c" "/root/install-executor.sh"
          sudo ovmlayer export --layer=$layer --dest=${{runner.temp}}/${{steps.arch.outputs.architecture}}-executor.tar
      - name: upload layer
        uses: actions/upload-artifact@v4
        with:
          name: ${{steps.arch.outputs.architecture}}-executor-layer
          path: ${{runner.temp}}/${{steps.arch.outputs.architecture}}-executor.tar
          retention-days: 1
      - name: layer-info
        run: |
          echo "Python Dependencies:" > release.log
          cat requirements.txt >> release.log
          echo "" >> release.log
          echo "" >> release.log
          echo "Node.js Dependencies:" >> release.log
          npm pkg get dependencies | grep -v "@oomol/oocana\"" >> release.log
      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{ github.event_name == 'push' &&  github.ref_type == 'tag' }}
        with:
          files: ${{runner.temp}}/${{steps.arch.outputs.architecture}}-executor.tar
          token: ${{ secrets.GITHUB_TOKEN }}
          body_path: release.log
          draft: false
          prerelease: false
          make_latest: true